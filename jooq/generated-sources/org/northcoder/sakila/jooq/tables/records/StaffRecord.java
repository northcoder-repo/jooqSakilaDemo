/*
 * This file is generated by jOOQ.
 */
package org.northcoder.sakila.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.northcoder.sakila.jooq.tables.StaffTable;
import org.northcoder.sakila.jooq.tables.pojos.Staff;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.staff.staff_id</code>.
     */
    public void setStaffId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sakila.staff.staff_id</code>.
     */
    public Integer getStaffId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sakila.staff.first_name</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sakila.staff.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sakila.staff.last_name</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sakila.staff.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sakila.staff.address_id</code>.
     */
    public void setAddressId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sakila.staff.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sakila.staff.picture</code>.
     */
    public void setPicture(byte[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>sakila.staff.picture</code>.
     */
    public byte[] getPicture() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>sakila.staff.email</code>.
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sakila.staff.email</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sakila.staff.store_id</code>.
     */
    public void setStoreId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>sakila.staff.store_id</code>.
     */
    public Integer getStoreId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>sakila.staff.active</code>.
     */
    public void setActive(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>sakila.staff.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>sakila.staff.username</code>.
     */
    public void setUsername(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>sakila.staff.username</code>.
     */
    public String getUsername() {
        return (String) get(8);
    }

    /**
     * Setter for <code>sakila.staff.password</code>.
     */
    public void setPassword(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>sakila.staff.password</code>.
     */
    public String getPassword() {
        return (String) get(9);
    }

    /**
     * Setter for <code>sakila.staff.last_update</code>.
     */
    public void setLastUpdate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>sakila.staff.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffRecord
     */
    public StaffRecord() {
        super(StaffTable.STAFF);
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(Integer staffId, String firstName, String lastName, Integer addressId, byte[] picture, String email, Integer storeId, Byte active, String username, String password, LocalDateTime lastUpdate) {
        super(StaffTable.STAFF);

        setStaffId(staffId);
        setFirstName(firstName);
        setLastName(lastName);
        setAddressId(addressId);
        setPicture(picture);
        setEmail(email);
        setStoreId(storeId);
        setActive(active);
        setUsername(username);
        setPassword(password);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(Staff value) {
        super(StaffTable.STAFF);

        if (value != null) {
            setStaffId(value.staffId());
            setFirstName(value.firstName());
            setLastName(value.lastName());
            setAddressId(value.addressId());
            setPicture(value.picture());
            setEmail(value.email());
            setStoreId(value.storeId());
            setActive(value.active());
            setUsername(value.username());
            setPassword(value.password());
            setLastUpdate(value.lastUpdate());
            resetChangedOnNotNull();
        }
    }
}
