/*
 * This file is generated by jOOQ.
 */
package org.northcoder.sakila.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.northcoder.sakila.jooq.tables.CustomerTable;
import org.northcoder.sakila.jooq.tables.pojos.Customer;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.customer.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sakila.customer.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sakila.customer.store_id</code>.
     */
    public void setStoreId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sakila.customer.store_id</code>.
     */
    public Integer getStoreId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sakila.customer.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sakila.customer.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sakila.customer.last_name</code>.
     */
    public void setLastName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sakila.customer.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sakila.customer.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sakila.customer.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sakila.customer.address_id</code>.
     */
    public void setAddressId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>sakila.customer.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>sakila.customer.active</code>.
     */
    public void setActive(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>sakila.customer.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>sakila.customer.create_date</code>.
     */
    public void setCreateDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>sakila.customer.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>sakila.customer.last_update</code>.
     */
    public void setLastUpdate(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>sakila.customer.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(CustomerTable.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Integer customerId, Integer storeId, String firstName, String lastName, String email, Integer addressId, Byte active, LocalDateTime createDate, LocalDateTime lastUpdate) {
        super(CustomerTable.CUSTOMER);

        setCustomerId(customerId);
        setStoreId(storeId);
        setFirstName(firstName);
        setLastName(lastName);
        setEmail(email);
        setAddressId(addressId);
        setActive(active);
        setCreateDate(createDate);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Customer value) {
        super(CustomerTable.CUSTOMER);

        if (value != null) {
            setCustomerId(value.customerId());
            setStoreId(value.storeId());
            setFirstName(value.firstName());
            setLastName(value.lastName());
            setEmail(value.email());
            setAddressId(value.addressId());
            setActive(value.active());
            setCreateDate(value.createDate());
            setLastUpdate(value.lastUpdate());
            resetChangedOnNotNull();
        }
    }
}
